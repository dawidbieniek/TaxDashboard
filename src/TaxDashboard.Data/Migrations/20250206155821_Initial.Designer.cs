// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxDashboard.Data;

#nullable disable

namespace TaxDashboard.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250206155821_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TaxDashboard.Data.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AuthorizationPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CEIDG1Handled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CashMethod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmploymentContract")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("FirstCashRegisterUseDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Invoiced")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PITPaymentType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ReductionChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReductionType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subscription")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SubscriptionPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suspended")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TaxHandledDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseCashRegister")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("VAT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VATPaymentType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("VATRHandled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ZUSDraHandledDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ZUSHandled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.InvoiceCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.JPKV7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ContextDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("JPKV7s");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Settlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ContextDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.VATUE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ContextDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("VATUEs");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Client", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Income", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Client", "Client")
                        .WithMany("Incomes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.InvoiceCount", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.JPKV7", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Client", "Client")
                        .WithMany("JPKV7HandledDates")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Settlement", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Client", "Client")
                        .WithMany("Settlements")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.VATUE", b =>
                {
                    b.HasOne("TaxDashboard.Data.Entities.Client", "Client")
                        .WithMany("VATUEHandledDates")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaxDashboard.Data.Entities.Client", b =>
                {
                    b.Navigation("Incomes");

                    b.Navigation("Invoices");

                    b.Navigation("JPKV7HandledDates");

                    b.Navigation("Settlements");

                    b.Navigation("VATUEHandledDates");
                });
#pragma warning restore 612, 618
        }
    }
}
