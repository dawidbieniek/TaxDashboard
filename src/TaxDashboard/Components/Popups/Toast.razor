@inject IJSRuntime JS

<div class="toast-container position-fixed bottom-0 end-0 p-3" data-bs-autohide="true">
    <div id="@Id" class="toast">
        <div class="toast-header">
            <strong class="me-auto">@Title</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            @if (_contentToDisplay is not null)
            {
                @_contentToDisplay
            }
        </div>
    </div>
</div>

@code {
    private RenderFragment? _contentToDisplay;

    [Parameter, EditorRequired]
    public string Title { get; set; } = "Toast";
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public string Id { get; set; } = "toastPopup";

    protected override void OnParametersSet()
    {
        _contentToDisplay = ChildContent;
    }

    public ValueTask ShowTextAsync(string? text = null) => ShowAsync(string.IsNullOrEmpty(text) ? null : builder => builder.AddContent(0, text));

    public ValueTask ShowAsync(RenderFragment? content = null)
    {
        if (content is not null)
        {
            _contentToDisplay = content;
            StateHasChanged();
        }

        return JS.InvokeVoidAsync("showToast", Id);
    }
}