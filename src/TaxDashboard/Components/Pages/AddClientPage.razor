@page "/add"

@using System.ComponentModel.DataAnnotations
@using TaxDashboard.Components.FormInputs
@using TaxDashboard.Components.Popups

@inject ClientsService ClientsService
@inject BanksService BanksService
@inject ISnackbar Toast

<EditForm Model="@_newClientData" class="pt-3" OnValidSubmit="CreateNewClient" onkeypress="if(event.keyCode==13){document.activeElement.blur();return false;}">
    <DataAnnotationsValidator />
    <MudContainer MaxWidth="MaxWidth.Small">
        <MudCard Class="pa-4" Elevation="4" Outlined>
            <MudCardHeader>
                <MudText Typo="Typo.h4" Align="Align.Center">Dodaj nowego klienta</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudStack Spacing="3">
                    <MudTextField Label="Imię" InputType="InputType.Text" @bind-Value="_newClientData.Name" For="@(() => _newClientData.Name)" Clearable="true" Required />
                    <MudTextField Label="Nazwisko" InputType="InputType.Text" @bind-Value="_newClientData.Surname" For="@(() => _newClientData.Surname)" Clearable="true" Required />
                    <MudTextField Label="Telefon" InputType="InputType.Telephone" @bind-Value="_newClientData.PhoneNumber" For="@(() => _newClientData.PhoneNumber)" Clearable="true" />
                    <MudTextField Label="Email" InputType="InputType.Email" @bind-Value="_newClientData.Email" For="@(() => _newClientData.Email)" Clearable="true" />
                    <MudDatePicker Label="Data założenia" @bind-Date="_newClientData.JoinDateTime" ShowToolbar="false" For="@(()=>_newClientData.JoinDateTime)" Clearable="true" Required />
                    <MudTextField Label="NIP" InputType="InputType.Text" @bind-Value="@_newClientData.NIP" For="@(() => _newClientData.NIP)" Mask="@(new PatternMask("000-000-00-00"))" Immediate="true" MaxLength="13" Clearable="true" Required />
                    <MudSelect Label="Bank" @bind-Value="_newClientData.Bank" Required>
                        @foreach (var bank in _allBanks)
                        {
                            <MudSelectItem Value="@bank">@bank.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudStack>
            </MudCardContent>
            <MudCardActions>
                <MudButton Class="ml-auto" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Dodaj</MudButton>
            </MudCardActions>
        </MudCard>
    </MudContainer>
</EditForm>
@code {
    private NewClientData _newClientData = default!;
    private List<Bank> _allBanks = [];

    protected override async Task OnInitializedAsync()
    {
        _allBanks = [.. await BanksService.GetAllAsync()];

        CreateNewClientData();
    }

    private void CreateNewClientData()
    {
        _newClientData = new()
            {
                Bank = _allBanks.First(),
                JoinDateTime = DateTime.Today,
            };
    }

    private async Task CreateNewClient()
    {
        Client newClient = new()
            {
                Name = _newClientData.Name,
                Surname = _newClientData.Surname,
                PhoneNumber = _newClientData.PhoneNumber,
                Email = _newClientData.Email,
                JoinDateTime = _newClientData.JoinDateTime!.Value,
                NIP = _newClientData.NIP,
                Bank = _newClientData.Bank,
            };

        await ClientsService.UpdateWithRelatedEntitiesAsync(newClient);

        Toast.Add(new MarkupString($"Pomyślnie dodano klienta <b>{newClient.FullName}</b>"));

        CreateNewClientData();
    }
}